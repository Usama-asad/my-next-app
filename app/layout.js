// app/layout.js
// This file is a Server Component by default.

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css"; // Your global CSS
import { ThemeProvider } from "../contexts/ThemeContext"; // Correct path to your custom ThemeProvider

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Create a Client Component wrapper for your ThemeProvider
// because ThemeProvider uses client-side hooks (useState, useEffect)
function Providers({ children }) {
  return <ThemeProvider>{children}</ThemeProvider>;
}

export default function RootLayout({ children }) {
  return (
    // suppressHydrationWarning is important here because ThemeProvider
    // manipulates the <html> class directly on the client after SSR.
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>{children}</Providers> {/* Wrap with your ThemeProvider via Providers */}
      </body>
    </html>
  );
}